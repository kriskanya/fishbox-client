// Generated by CoffeeScript 1.7.1
(function() {
  var FISH_BOX, cheerio, get_email, get_link, get_link_poll, gn, make_request, q, qs, request, set_fish_box, _;

  qs = require('querystring');

  q = require('q');

  request = require('request');

  _ = require('lodash');

  cheerio = require('cheerio');

  FISH_BOX = 'DEFAULT_URL';

  set_fish_box = function(fish_box) {
    return FISH_BOX = fish_box;
  };

  make_request = function(url) {
    var deferred;
    deferred = q.defer();
    request(url, function(error, response, body) {
      if (response.statusCode !== 200) {
        return deferred.reject(response.statusCode);
      } else {
        return deferred.resolve(JSON.parse(body));
      }
    });
    return deferred.promise;
  };

  get_email = function(handle) {
    return make_request(FISH_BOX + ("/" + handle));
  };

  get_link = function(handle, subject, contains_text) {
    var link_text;
    link_text = q.defer();
    gn.get_email(handle).then(function(data) {
      var mailbox;
      mailbox = data;
      if (mailbox.length > 0 && mailbox[0].subject === subject) {
        return mailbox[0].html;
      } else {
        return link_text.reject('no_matching_email');
      }
    }).then(function(html) {
      var $;
      $ = cheerio.load(html);
      return link_text.resolve($("a:contains(" + contains_text + ")").text());
    }, function(error) {
      return link_text.reject(error);
    });
    return link_text.promise;
  };

  get_link_poll = function(handle, subject, contains_text, attempts) {
    var link;
    if (attempts == null) {
      attempts = 0;
    }
    link = q.defer();
    attempts = attempts + 1;
    if (attempts < 6) {
      get_link(handle, subject, contains_text).then(function(email) {
        return link.resolve(email);
      }, function(error) {
        if (error === 'no_matching_email' || error === '404') {
          return setTimeout(function() {
            return link.resolve(get_link_poll(handle, subject, contains_text, attempts));
          }, 4000);
        } else {
          return link.reject(error);
        }
      });
    } else {
      link.reject('max_email_fetch_attempts_reached');
    }
    return link.promise;
  };

  gn = {
    get_email: get_email,
    get_link_poll: get_link_poll,
    set_fish_box: set_fish_box
  };

  module.exports = gn;

}).call(this);
